@tailwind base;
@tailwind components;
@tailwind utilities;

/*
NOTE: Since we don't use the Scroll Into View API anymore this shouldn't be needed but
  I prefer leaving it here in case we need to get back to it.
*/

/* html {
  scroll-behavior: smooth;
} */

:root {
  --foreground-rgb: 0, 0, 0;
  --background-rgb: 255, 255, 255;
  --bg-grid-box-size: 200px;
}

@screen lg {
  :root {
    --bg-grid-box-size: 250px;
  }
}

/* TODO: Use Tailwind CSS */
body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
}

/* TODO: Use Tailwind CSS */
.root-layout-container {
  position: absolute;
  width: 100%;
  display: flex;
  justify-content: center;
  /* padding-top: calc(var(--bg-grid-box-size) / 2 + 50px); */
}

.drill-mouse-hover {
  pointer-events: none !important;
}

.drill-mouse-hover > * {
  pointer-events: auto;
}


/* TODO: Use Tailwind CSS */
.root-layout-container main {
  display: flex;
  flex-direction: column;
  width: calc(var(--bg-grid-box-size) * 4 + 2px);
}

* {
  cursor: none;
}

/* TODO: Use Tailwind CSS */
.cursor {
  pointer-events: none;
  background-color: white;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 30;
  mix-blend-mode: difference;
}
/* https://stackoverflow.com/questions/4191260/drawing-a-grid-using-css */
/* .css-bg-grid {
  box-sizing: border-box;
  margin:0;
  background-position: center center;
  background-size: calc(var(--bg-grid-box-size)/2) calc(var(--bg-grid-box-size)/2);

  background-image:
  repeating-linear-gradient(#000000 0 2px, transparent 2px 100%),
  repeating-linear-gradient(90deg, #000000 0 2px, transparent 2px 100%);
} */

@layer components {
  .border-inside {
    @apply outline outline-black outline-2 -outline-offset-2;
  }
}